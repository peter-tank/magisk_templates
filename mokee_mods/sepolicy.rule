#/sys/devices/platform/soc(/.*)? u:object_r:tethering_service:s0
#SELinux : avc:  denied  { find } for pid=4475 uid=10069 name=tethering scontext=u:r:permissioncontroller_app:s0:c69,c256,c512,c768 tcontext=u:object_r:tethering_service:s0 tclass=service_manager permissive=0
#file_contexts
#logcat | grep " SELinux" | sed -e 's/^.*avc: *\([^ ]*\).*{\([^}]*\)}\(.*\)scontext=u:r:\([^:]*\).* tcontext=u:object_r:\([^:]*\).*tclass=\([^ ]*\).*\(permissive=.*\)$/\3\n\1 \7 allow \4 \5 \6 {\2}/p'
#logcat | grep "avc" | sed -ne 's/^.*avc: *\([^ ]*\).*{\([^}]*\)}.*scontext=u:r:\([^:]*\).*tcontext=u:object_r:\([^:]*\).*tclass=\([^ ]*\).*\(permissive=.*\)$/\1 \6 allow \3 \4 \5 {\2}/p' | grep denied | grep permissive=0 | sort | uniq | sed -e 's/denied //' -e 's/permissive=. //'
allow audioserver device chr_file { ioctl }
allow audioserver i2c_device chr_file { ioctl }
allow bootanim system_data_file dir { read }
allow cameraserver device chr_file { ioctl open read write }
allow cameraserver init unix_dgram_socket { sendto }
allow cameraserver init unix_stream_socket { connectto }
allow hal_wifi_default unlabeled file { open read }
allow healthd sysfs file { getattr open read }
allow hwservicemanager init binder { call }
allow hwservicemanager init dir { open search read }
allow hwservicemanager init file { open read }
allow hwservicemanager init process { getattr }
allow init cameraserver fd { use }
allow init default_android_hwservice hwservice_manager { add }
allow init default_android_service service_manager { add find }
allow init device chr_file { ioctl }
allow init hal_drm_hwservice hwservice_manager { add }
allow init hal_light_hwservice hwservice_manager { add }
allow init hal_mokee_livedisplay_hwservice hwservice_manager { add }
allow init hal_mokee_touch_hwservice hwservice_manager { add }
allow init hal_power_hwservice hwservice_manager { add }
allow init hidl_base_hwservice hwservice_manager { add }
allow init hwservicemanager binder { call transfer }
allow init init binder { call }
allow init init capability { net_bind_service }
allow init init capability2 { block_suspend }
allow init init socket { bind read write create }
allow init init tcp_socket { create }
allow init init udp_socket { bind }
allow init kernel system { module_request }
allow init magisk unix_stream_socket { connectto }
allow init netd unix_stream_socket { connectto }
allow init proc file { getattr setattr read open write }
allow init proc_filesystems file { getattr }
allow init proc_interrupts file { getattr }
allow init servicemanager binder { call transfer }
allow init shell_exec file { execute_no_trans }
allow init socket_device sock_file { create write }
allow init sysfs file { read open write }
allow init sysfs_devices_system_cpu file { write }
allow init system_data_file file { ioctl lock append }
allow init system_file file { execute_no_trans }
allow init tmpfs lnk_file { create }
allow init vendor_file file { execute_no_trans execmod }
allow isolated_app app_data_file dir { getattr }
allow mediadrmserver init binder { call }
allow nfc system_data_file file { open }
allow platform_app default_android_service service_manager { find }
allow platform_app device chr_file { ioctl open read write }
allow priv_app device chr_file { ioctl read write }
allow priv_app hal_memtrack_hwservice hwservice_manager { find }
allow priv_app init unix_stream_socket { connectto }
allow priv_app kernel security { read_policy }
allow priv_app proc file { getattr open }
allow priv_app proc_interrupts file { getattr open }
allow priv_app proc_modules file { getattr open }
allow radio default_android_service service_manager { add }
allow rild default_android_service service_manager { find }
allow rild init binder { call transfer }
allow rild servicemanager binder { call }
allow rild socket_device dir { add_name }
allow rild system_data_file dir { open read add_name write remove_name }
allow rild system_data_file file { getattr ioctl open read lock unlink create write }
allow servicemanager init dir { search }
allow servicemanager init file { open read }
allow servicemanager init process { getattr }
allow servicemanager rild dir { search }
allow servicemanager rild file { open read }
allow servicemanager rild process { getattr }
allow snap_app device chr_file { ioctl open read write }
allow storaged sysfs file { getattr open read }
allow surfaceflinger default_android_service service_manager { find add }
allow surfaceflinger device chr_file { ioctl read write }
allow system_app apk_data_file dir { add_name remove_name write create }
allow system_app apk_data_file file { unlink create write }
allow system_app init binder { call }
allow system_app proc_pagetypeinfo file { getattr open read }
allow system_server dalvikcache_data_file file { execute }
allow system_server default_android_service service_manager { find }
allow system_server device chr_file { ioctl open read write }
allow system_server init binder { call transfer }
allow system_server media_rw_data_file file { open }
allow system_server proc file { getattr open read }
allow system_server socket_device dir { add_name }
allow system_server socket_device sock_file { create }
allow toolbox firmware_file dir { open read }
allow toolbox firmware_file file { getattr open read}
allow toolbox init unix_stream_socket { connectto }
allow toolbox proc_meminfo file { read }
allow toolbox system_data_file dir { open setattr getattr rmdir add_name create read remove_name write }
allow toolbox system_data_file file { getattr setattr create read write open unlink }
allow toolbox toolbox capability { chown dac_override }
allow toolbox unlabeled file { getattr setattr }
allow ueventd firmware_file file { getattr open read }
